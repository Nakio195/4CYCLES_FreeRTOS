/*
 * PhaserunnerRegisterMap.h
 *
 *  Created on: 10 d√©c. 2024
 *      Author: To
 *
 *      This struct defines the internal dictionnary of the Phaserunnner L10 Based on an ASI board.
 *
 *      If memory space isn't a problem you can define
 *      USE_REGISTER_NAME to include the names of each register.
 *
 *      Leave it undefined for small embedded systems.
 */

#ifndef UTILITIES_SRC_PHASERUNNERREGISTERMAP_H_
#define UTILITIES_SRC_PHASERUNNERREGISTERMAP_H_

//#define USE_REGISTER_NAME

#ifndef USE_REGISTER_NAME

struct ControllerFaults
{
	// @299
	uint16_t faults = 0;

	enum
	{
		CurrentScaling = 1 << 1,
		VoltageScaling = 1 << 2,
		HeadlightUndervoltage = 1 << 3,
		CANbus = 1 << 5,
		HallStall = 1 << 6,
		DynTorqueSensorVoltageOutOfRange = 1 << 10,
		DynTorqueSensorStaticVoltageFault = 1 << 11,
		RemoteCANfault = 1 << 12,
		OpenPhaseFault = 1 << 14,
		AnalogBrakeVoltageOutOfRange = 1 << 15,
	};

	bool ready()
	{
		return faults == 0;
	}
};


struct MotorFaults
{
	//@258
	uint16_t faults = 0;

	enum
	{
		ControllerOverVoltage = 1 << 0,
		FilteredPhaseOverCurrent = 1 << 1,
		BadCurrentSensorCalibration = 1 << 2,
		CurrentSensorOvCurrent = 1 << 3,
		CurrentSensorOvTemp = 1 << 4,
		MotorHallSensorFault = 1 << 5,
		ControllerUnderVoltage = 1 << 6,
		NetworkCommTimeout = 1 << 8,
		InstantPhaseOvCurrent = 1 << 9,
		MotorOvTemp = 1 << 10,
		ThrottleOvVoltage = 1 << 11,
		InstantControllerOvVoltage = 1 << 12,
		InternalError = 1 << 13,
		InstantControllerUndVoltage = 1 << 15
	};

	bool ready()
	{
		return faults == 0;
	}
};

struct Register
{
	Register(uint16_t add = 0, float sca = 0, float val = 0)
	{
		address = add;
		scale = sca;
		value = val;
		pendingWrite = false;
		pendingRead = false;
	}

	uint16_t address;
	float scale;
	float value;
	bool pendingWrite;
	bool pendingRead;
};

//Uncomment the needed registers to save memory and update array size

struct Registers
{
	void set(uint16_t addr, uint16_t value)
	{
		for(auto& r : map)
		{
			if(r.address == addr)
			{
				r.value = value;
				r.pendingWrite = true;

				return;
			}
		}
	}

	void read(uint16_t addr)
	{
		for(auto& r : map)
		{
			if(r.address == addr)
			{
				r.pendingRead = true;
				return;
			}
		}
	}

	Register get(uint16_t addr)
	{
		for(const auto& r : map)
		{
			if(r.address == addr)
				return r;
		}

		return Register();
	}

	std::vector<Register> get(uint16_t addr, uint8_t count)
	{
		std::vector<Register> registers;

		if(count <= 16)
		{
			for(uint8_t i = 0; i < count; i++)
			{
				registers.push_back(get(addr+i));
			}
		}

		return registers;
	}

	//std::map<uint16_t, Register> map2 = {0, Register(0, 32)};

	std::vector<Register> map = {
//			{0, 1},
//			{1, 1},
//			{2, 1},
//			{3, 1},
//			{4, 0.01},
//			{5, 1},
//			{6, 0},
//			{7, 4096},
//			{8, 16},
//			{9, 4096},
//			{10, 256},
			{11, 0},
//			{12, 1},
//			{13, 1},
//			{14, 64},
//			{15, 256},
//			{16, 64},
//			{17, 1024},
//			{18, 1024},
//			{19, 1024},
//			{20, 1},
//			{21, 1},
//			{22, 1},
//			{23, 1},
//			{24, 1},
//			{25, 1},
//			{26, 1},
//			{27, 1},
//			{28, 1},
//			{29, 1},
//			{30, 1},
//			{31, 4096},
			{32, 1},
//			{33, 40.96},
//			{34, 1},
//			{35, 1},
//			{36, 1},
//			{37, 4096},
//			{38, 4096},
//			{39, 4096},
//			{40, 4096},
//			{41, 4096},
//			{42, 4096},
//			{43, 1},
//			{44, 1},
//			{45, 1},
//			{46, 1},
//			{47, 4096},
//			{48, 4096},
			{49, 1},
//			{50, 4096},
//			{51, 1},
//			{52, 1},
//			{53, 256},
//			{54, 1},
//			{55, 0.03125},
//			{56, 1},
//			{57, 1},
//			{58, 0},
//			{59, 1},
//			{60, 8},
//			{61, 8},
//			{62, 0},
//			{63, 1},
//			{64, 0.01},
//			{65, 1},
//			{66, 0},
//			{67, 1000},
//			{68, 1},
//			{69, 1},
//			{70, 1},
//			{71, 1},
//			{72, 1},
//			{73, 1},
//			{74, 1},
//			{75, 1},
//			{76, 0},
//			{77, 0},
//			{78, 1},
//			{79, 91.02222222},
//			{80, 1},
//			{81, 1},
//			{82, 1},
//			{83, 1},
//			{84, 1},
//			{85, 1},
//			{86, 1},
//			{87, 1},
//			{88, 32},
//			{89, 32},
//			{90, 1},
//			{91, 1},
//			{92, 1},
//			{93, 4096},
//			{94, 4096},
//			{95, 4096},
//			{96, 4096},
//			{97, 4096},
//			{98, 4096},
//			{99, 40.96},
//			{100, 40.96},
//			{101, 1},
//			{102, 40.96},
//			{103, 1},
//			{104, 40.96},
//			{105, 40.96},
//			{106, 4096},
//			{107, 1},
//			{108, 1},
//			{109, 1},
//			{110, 1},
//			{111, 32},
//			{112, 0},
//			{113, 1},
//			{114, 0},
//			{115, 1},
//			{116, 16},
//			{117, 4096},
//			{118, 16},
//			{119, 1},
//			{120, 32},
//			{121, 1},
//			{122, 1},
//			{123, 256},
//			{124, 256},
//			{125, 1},
//			{126, 1},
//			{127, 0},
//			{128, 1},
//			{129, 40.96},
//			{130, 1},
//			{131, 1},
//			{132, 4096},
//			{133, 1},
//			{134, 1},
//			{135, 1},
//			{136, 1},
//			{137, 0},
//			{138, 0},
//			{139, 0},
//			{140, 0},
//			{141, 40.96},
//			{142, 40.96},
//			{143, 1},
//			{144, 1},
//			{145, 1},
//			{146, 1},
//			{147, 40.96},
//			{148, 40.96},
//			{149, 40.96},
//			{150, 40.96},
//			{151, 4096},
//			{152, 4096},
//			{153, 1},
//			{154, 40.96},
//			{155, 40.96},
//			{156, 40.96},
//			{157, 40.96},
//			{158, 40.96},
//			{159, 40.96},
//			{160, 40.96},
//			{161, 40.96},
//			{162, 40.96},
//			{163, 40.96},
//			{164, 40.96},
//			{165, 40.96},
//			{166, 40.96},
//			{167, 40.96},
//			{168, 40.96},
//			{169, 40.96},
//			{170, 40.96},
//			{171, 40.96},
//			{172, 40.96},
//			{173, 4096},
//			{174, 0},
//			{175, 4096},
//			{176, 64},
//			{177, 40.96},
//			{178, 0},
//			{179, 1024},
//			{180, 64},
//			{181, 64},
//			{182, 4096},
//			{183, 1},
//			{184, 0},
//			{185, 0},
//			{186, 0},
//			{187, 0},
//			{188, 1},
//			{189, 0},
//			{190, 1},
//			{191, 1},
//			{192, 1},
//			{193, 0},
//			{194, 40.96},
//			{195, 40.96},
//			{196, 1},
//			{197, 32},
//			{198, 32},
//			{199, 4096},
//			{200, 4096},
//			{201, 4096},
//			{202, 256},
//			{203, 256},
//			{204, 256},
//			{205, 256},
//			{206, 256},
//			{207, 0},
			{208, 0},
//			{209, 0},
//			{210, 0},
//			{211, 0},
//			{212, 0},
//			{213, 4096},
//			{214, 4096},
//			{215, 4096},
//			{216, 4096},
//			{217, 4096},
//			{218, 4096},
//			{219, 4096},
//			{220, 1},
//			{221, 1},
//			{222, 1},
//			{223, 1},
//			{224, 1},
//			{225, 1},
//			{226, 256},
//			{227, 1},
//			{228, 256},
//			{229, 256},
//			{230, 256},
//			{231, 1},
//			{232, 1},
//			{233, 1},
//			{234, 1},
//			{235, 1},
//			{236, 256},
//			{237, 1},
//			{238, 1},
//			{239, 1},
//			{240, 1},
//			{241, 4096},
//			{242, 0},
//			{243, 4096},
//			{244, 0},
//			{245, 4096},
//			{246, 4096},
//			{247, 0},
//			{248, 0},
//			{249, 0},
//			{250, 4096},
//			{251, 4096},
//			{252, 256},
//			{253, 4096},
//			{254, 1},
//			{255, 1},
//			{256, 1000},
//			{257, 0},
			{258, 0}, // faults1
//			{259, 1},
//			{260, 256},
//			{261, 1},
//			{262, 32},
//			{263, 1},
//			{264, 40.96},
//			{265, 32},
//			{266, 32},
//			{267, 1},
//			{268, 1},
//			{269, 0},
//			{270, 4096},
//			{271, 4096},
//			{272, 4096},
//			{273, 4096},
//			{274, 4096},
//			{275, 1024},
//			{276, 0},
//			{277, 0},
//			{278, 182.04444444444444444444444444444},
//			{279, 1},
//			{280, 1},
//			{281, 1},
//			{282, 32},
//			{283, 32},
//			{284, 32},
//			{285, 32},
//			{286, 32},
//			{287, 32},
//			{288, 1000},
//			{289, 1024},
//			{290, 32},
//			{291, 4096},
//			{292, 4096},
//			{293, 4096},
//			{294, 4096},
//			{295, 0},
//			{296, 4096},
//			{297, 4096},
//			{298, 40.96},
			{299, 0}, // faults2
//			{300, 4096},
//			{301, 4096},
//			{302, 4096},
//			{303, 4096},
//			{304, 4096},
//			{305, 4096},
//			{306, 4096},
//			{307, 4096},
//			{308, 4096},
//			{309, 4096},
//			{310, 4096},
//			{311, 16},
//			{312, 16},
//			{313, 16},
//			{314, 4096},
//			{315, 4096},
//			{316, 4096},
//			{317, 4096},
//			{318, 4096},
//			{319, 4096},
//			{320, 4096},
//			{321, 4096},
//			{322, 4096},
//			{323, 4096},
//			{324, 4096},
//			{325, 4096},
//			{326, 4096},
//			{327, 0},
//			{328, 64},
//			{329, 4096},
//			{330, 0},
//			{331, 64},
//			{332, 64},
//			{333, 4096},
//			{334, 1},
//			{335, 4096},
//			{336, 4096},
//			{337, 4096},
//			{338, 4096},
//			{339, 4096},
//			{340, 1},
//			{341, 1},
//			{342, 1},
//			{343, 1},
//			{344, 1},
//			{345, 4096},
//			{346, 4096},
//			{347, 4096},
//			{348, 4096},
//			{349, 4096},
//			{350, 60},
//			{351, 60},
//			{352, 15},
//			{353, 15},
//			{354, 15},
//			{355, 60},
//			{356, 91.02222222},
//			{357, 91.02222222},
//			{358, 60},
//			{359, 0},
//			{360, 8},
//			{361, 8},
//			{362, 1},
//			{363, 0},
//			{364, 0},
//			{365, 15},
//			{366, 2048},
//			{367, 4096},
//			{368, 4096},
//			{369, 4096},
//			{370, 256},
//			{371, 256},
//			{372, 4096},
//			{373, 4096},
//			{374, 4096},
//			{375, 4096},
//			{376, 256},
//			{377, 256},
//			{378, 4096},
//			{379, 4096},
//			{380, 4096},
//			{381, 4096},
//			{382, 4096},
//			{383, 4096},
//			{384, 1},
//			{385, 1},
//			{386, 4096},
//			{387, 4096},
//			{388, 4096},
//			{389, 4096},
//			{390, 4096},
//			{391, 4096},
//			{392, 1},
//			{393, 4096},
//			{394, 65536},
//			{395, 91.022222},
//			{396, 8},
//			{397, 8},
//			{398, 4096},
//			{399, 4096},
//			{400, 1},
//			{401, 1},
//			{402, 1},
//			{403, 0},
//			{404, 65536},
//			{405, 32},
//			{406, 1},
//			{407, 1},
//			{408, 100},
//			{409, 1},
//			{410, 65536},
//			{411, 65536},
//			{412, 1},
//			{413, 1},
//			{414, 256},
//			{415, 1},
//			{416, 65536},
//			{417, 65536},
//			{418, 0},
//			{419, 1},
//			{420, 256},
//			{421, 256},
//			{422, 4096},
//			{423, 4096},
//			{424, 1},
//			{425, 1},
//			{426, 1},
//			{427, 4096},
//			{428, 4096},
//			{429, 8},
//			{430, 0},
//			{431, 4096},
//			{432, 1},
//			{433, 32},
//			{434, 32},
//			{435, 4096},
//			{436, 4096},
//			{437, 1},
//			{438, 1},
//			{439, 1},
//			{440, 4096},
//			{441, 4096},
//			{442, 4096},
//			{443, 4096},
//			{444, 4096},
//			{445, 4096},
//			{446, 4096},
//			{447, 4096},
//			{448, 0},
//			{449, 0},
//			{450, 1},
//			{451, 0},
//			{452, 0},
//			{453, 0},
//			{454, 0},
//			{455, 1},
//			{456, 40.96},
//			{457, 40.96},
//			{458, 15},
//			{459, 15},
//			{460, 91.02222222},
//			{461, 4096},
//			{462, 1},
//			{463, 4096},
//			{464, 256},
//			{465, 0},
//			{466, 0},
//			{467, 0},
//			{468, 0},
//			{469, 0},
//			{470, 0},
//			{471, 0},
//			{472, 0},
//			{473, 40.96},
//			{474, 40.96},
//			{475, 40.96},
//			{476, 0},
//			{477, 40.96},
//			{478, 2.56},
//			{479, 2.56},
//			{480, 0},
//			{481, 0},
//			{482, 4096},
//			{483, 1},
//			{484, 16},
//			{485, 91.022222},
//			{486, 1},
//			{487, 1},
//			{488, 0},
//			{489, 1},
			{490, 40.96},
			{491, 40.96},
			{492, 40.96},
			{493, 0},
			{494, 40.96},
			{495, 4096},
//			{496, 0},
//			{497, 4096},
//			{498, 0},
//			{499, 10000},
//			{500, 4096},
//			{501, 4096},
//			{502, 1},
//			{503, 1},
//			{504, 1},
//			{505, 4096},
//			{506, 1},
//			{507, 1},
			{508, 1},
			{509, 0},
//			{510, 0},
//			{511, 0}
	};

};
#else

struct Register
{
	String name;
	uint16_t address;
	uint16_t scale;
	uint16_t value;
};

struct Registers
{
	Register Map[512] = {
		{"Controller output current rating", 0, 1},
		{"Controller input voltage rating", 1, 1},
		{"Switching frequency", 2, 1},
		{"Dead time", 3, 1},
		{"Baud rate", 4, 0.01},
		{"Slave ID", 5, 1},
		{"HW configuration vector", 6, 0},
		{"Current regulator Kp", 7, 4096},
		{"Current regulator Ki", 8, 16},
		{"Speed regulator Kp", 9, 4096},
		{"Speed regulator Ki", 10, 256},
		{"Speed regulator mode", 11, 0},
		{"Pll Kp old", 12, 1},
		{"Pll Ki old", 13, 1},
		{"Phase A current gain", 14, 64},
		{"Voltage gain", 15, 256},
		{"Phase C current gain", 16, 64},
		{"Throttle gain", 17, 1024},
		{"Brake gain", 18, 1024},
		{"BMS gain", 19, 1024},
		{"DC voltage filter shift", 20, 1},
		{"Temperature filter shift", 21, 1},
		{"DQ axis filter shift", 22, 1},
		{"Flux filter shift", 23, 1},
		{"Flux hpf shift", 24, 1},
		{"Flux frequency filter shift", 25, 1},
		{"Voltage feedback filter cutoff frequency", 26, 1},
		{"Averaged over current trip threshold", 27, 1},
		{"Averaged over current trip sample length", 28, 1},
		{"Instantaneous over current trip threshold", 29, 1},
		{"Phase Current RMS Filter Shift", 30, 1},
		{"Maximum interrupt execution time", 31, 4096},
		{"Command timeout threshold", 32, 1},
		{"DC voltage trip clear hysterisis", 33, 40.96},
		{"Heatsink over temperature trip threshold", 34, 1},
		{"Controller foldback starting temperature", 35, 1},
		{"Controller foldback ending temperature", 36, 1},
		{"Controller temperature feedback V at 0 C", 37, 4096},
		{"Controller temperature feedback V at 25 C", 38, 4096},
		{"Controller temperature feedback V at 50 C", 39, 4096},
		{"Controller temperature feedback V at 75 C", 40, 4096},
		{"Controller temperature feedback V at 100 C", 41, 4096},
		{"Controller temperature feedback V at 125 C", 42, 4096},
		{"SMT Datecode", 43, 1},
		{"SMT Serial Number", 44, 1},
		{"Antitheft enable time", 45, 1},
		{"reserved 46", 46, 1},
		{"Open circuit voltage test window", 47, 4096},
		{"High/Lowside turn on voltage test window", 48, 4096},
		{"Average Command timeout threshold", 49, 1},
		{"Remote comm loss braking current limit", 50, 4096},
		{"Current Regulator bandwidth", 51, 1},
		{"PLL bandwidth", 52, 1},
		{"PLL damping", 53, 256},
		{"Pll Kp", 54, 1},
		{"Pll Ki", 55, 0.03125},
		{"CAN baud rate", 56, 1},
		{"CAN ID", 57, 1},
		{"Communications Configuration Vector", 58, 0},
		{"Battery resistance", 59, 1},
		{"New Phase A current gain", 60, 8},
		{"New Phase C current gain", 61, 8},
		{"Flash parameter read access code 1", 62, 0},
		{"Hall stall fault time", 63, 1},
		{"Baud rate port2", 64, 0.01},
		{"Slave ID port2", 65, 1},
		{"Display protocol", 66, 0},
		{"Saved software revision", 67, 1000},
		{"reserved 68", 68, 1},
		{"Lm", 69, 1},
		{"Rated system voltage", 70, 1},
		{"Rated motor current", 71, 1},
		{"Rated motor speed", 72, 1},
		{"Rated motor power (Race mode Throttle power)", 73, 1},
		{"Ls", 74, 1},
		{"Rs", 75, 1},
		{"Display protocol2", 76, 0},
		{"Motor position sensor type", 77, 0},
		{"# of motor pole pairs", 78, 1},
		{"Hall offset", 79, 91.02222222},
		{"Hall sector[0]", 80, 1},
		{"Hall sector[1]", 81, 1},
		{"Hall sector[2]", 82, 1},
		{"Hall sector[3]", 83, 1},
		{"Hall sector[4]", 84, 1},
		{"Hall sector[5]", 85, 1},
		{"Hall sector[6]", 86, 1},
		{"Hall sector[7]", 87, 1},
		{"Hall interpolation start frequency", 88, 32},
		{"Hall interpolation stop frequency", 89, 32},
		{"Motor over temperature trip threshold", 90, 1},
		{"Motor foldback starting temperature", 91, 1},
		{"Motor foldback ending temperature", 92, 1},
		{"Temperature feedback V at 0 C", 93, 4096},
		{"Temperature feedback V at 25 C", 94, 4096},
		{"Temperature feedback V at 50 C", 95, 4096},
		{"Temperature feedback V at 75 C", 96, 4096},
		{"Temperature feedback V at 100 C", 97, 4096},
		{"Temperature feedback V at 125 C", 98, 4096},
		{"Overload continous current", 99, 40.96},
		{"Overload heating current", 100, 40.96},
		{"Overload heating time", 101, 1},
		{"Overload cooling current", 102, 40.96},
		{"Overload cooling time", 103, 1},
		{"Overload foldback start", 104, 40.96},
		{"Overload foldback end", 105, 40.96},
		{"Sensorless open loop starting current", 106, 4096},
		{"Sensorless open loop injection current ramp time", 107, 1},
		{"Sensorless closed loop enable frequency", 108, 1},
		{"Sensorless open loop freq ramp time ms", 109, 1},
		{"Sensorless open loop dc current hold time", 110, 1},
		{"Battery upper range", 111, 32},
		{"Display language and units", 112, 0},
		{"POD LED Brightness Obsolete", 113, 1},
		{"Single push assist source", 114, 0},
		{"Single push assist boost timer", 115, 1},
		{"Speed mode positive acceleration ramp", 116, 16},
		{"Throttle agressiveness speed threshold", 117, 4096},
		{"Speed mode Regen ramp", 118, 16},
		{"Hall transitions to start free wheel", 119, 1},
		{"Battery lower range", 120, 32},
		{"Rated motor power (Street mode PAS power)", 121, 1},
		{"Rated motor power (Race mode PAS power)", 122, 1},
		{"Vehicle maximum speed (Street mode PAS max speed)", 123, 256},
		{"Vehicle maximum speed (Race mode PAS max speed)", 124, 256},
		{"Customer Parameter version", 125, 1},
		{"Bluetooth Test Parameter", 126, 1},
		{"Motor features", 127, 0},
		{"Hall Interpolation Transitions", 128, 1},
		{"Maximum Field Weakening current", 129, 40.96},
		{"reserved_130", 130, 1},
		{"Rated motor power (Street mode Throttle power)", 131, 1},
		{"Pedalec sensorless open loop starting current", 132, 4096},
		{"Pedalec sensorless open loop freq ramp time ms", 133, 1},
		{"Pedalec sensorless closed loop enable frequency", 134, 1},
		{"High battery state of charge foldback starting capacity", 135, 1},
		{"High battery state of charge foldback end capacity", 136, 1},
		{"Motor temperature source", 137, 0},
		{"Walk mode signal source", 138, 0},
		{"Alternate power switch source", 139, 0},
		{"Alternate speed limit switch source", 140, 0},
		{"Low battery foldback starting voltage", 141, 40.96},
		{"Low battery foldback end voltage", 142, 40.96},
		{"Cold battery foldback starting temperature", 143, 1},
		{"Cold battery foldback ending temperature", 144, 1},
		{"Low battery state of charge foldback starting capacity", 145, 1},
		{"Low battery state of charge foldback end capacity", 146, 1},
		{"Fast over voltage threshold", 147, 40.96},
		{"Fast under voltage threshold", 148, 40.96},
		{"Slow over voltage threshold", 149, 40.96},
		{"Slow under voltage threshold", 150, 40.96},
		{"Throttle deadband threshold", 151, 4096},
		{"Throttle fault range", 152, 4096},
		{"Reserved L1 1", 153, 1},
		{"Maximum braking torque", 154, 40.96},
		{"Battery current limit", 155, 40.96},
		{"Regeneration battery current limit", 156, 40.96},
		{"Power map Watts setpoint 1", 157, 40.96},
		{"Power map Watts setpoint 2", 158, 40.96},
		{"Power map Watts setpoint 3", 159, 40.96},
		{"Power map Watts setpoint 4", 160, 40.96},
		{"Power map Watts setpoint 5", 161, 40.96},
		{"Power map Watts setpoint 6", 162, 40.96},
		{"Power map Watts setpoint 7", 163, 40.96},
		{"Power map Watts setpoint 8", 164, 40.96},
		{"Power map speed setpoint 1", 165, 40.96},
		{"Power map speed setpoint 2", 166, 40.96},
		{"Power map speed setpoint 3", 167, 40.96},
		{"Power map speed setpoint 4", 168, 40.96},
		{"Power map speed setpoint 5", 169, 40.96},
		{"Power map speed setpoint 6", 170, 40.96},
		{"Power map speed setpoint 7", 171, 40.96},
		{"Power map speed setpoint 8", 172, 40.96},
		{"Minimum motoring torque", 173, 4096},
		{"Features2", 174, 0},
		{"Pedal speed map offset", 175, 4096},
		{"Pedal speed map end", 176, 64},
		{"Engine braking torque", 177, 40.96},
		{"Pedalec torque symmetry", 178, 0},
		{"Pedalec power gain", 179, 1024},
		{"Pedalec initial torque", 180, 64},
		{"Pedalec deadband torque", 181, 64},
		{"Torque sensor offset", 182, 4096},
		{"Torque sensor gain", 183, 1},
		{"Datalog channel 1 select", 184, 0},
		{"Datalog channel 2 select", 185, 0},
		{"Datalog channel 3 select", 186, 0},
		{"Datalog channel 4 select", 187, 0},
		{"Datalog trigger level", 188, 1},
		{"Datalog trigger mask", 189, 0},
		{"Datalog hold off", 190, 1},
		{"Datalog timebase", 191, 1},
		{"Datalog trigger mode", 192, 1},
		{"Wheel speed sensor source", 193, 0},
		{"High battery foldback starting voltage", 194, 40.96},
		{"High battery foldback end voltage", 195, 40.96},
		{"Low battery state of charge alarm threshold", 196, 1},
		{"Voltage model battery state of charge gain", 197, 32},
		{"Voltage model battery state of charge offset", 198, 32},
		{"Axle torque sensor 1", 199, 4096},
		{"Axle torque sensor 2", 200, 4096},
		{"Axle torque sensor  3", 201, 4096},
		{"Rolling start speed 1", 202, 256},
		{"Rolling start speed 2", 203, 256},
		{"Rolling start speed 3", 204, 256},
		{"Rolling start speed", 205, 256},
		{"Regen brake speed", 206, 256},
		{"Reserved Parameter for Customer", 207, 0},
		{"Control command source", 208, 0},
		{"Battery management interface type", 209, 0},
		{"Assist mode source", 210, 0},
		{"Pedal sensor type", 211, 0},
		{"Features", 212, 0},
		{"Throttle full voltage", 213, 4096},
		{"Throttle off voltage", 214, 4096},
		{"Analogue brake full voltage", 215, 4096},
		{"Analogue brake off voltage", 216, 4096},
		{"Assist high voltage reading", 217, 4096},
		{"Assist low voltage reading", 218, 4096},
		{"Assist gain 1", 219, 4096},
		{"Positive motoring torque ramp", 220, 1},
		{"Negative motoring torque ramp", 221, 1},
		{"Pedalec positive motoring torque ramp", 222, 1},
		{"Pedalec negative motoring torque ramp", 223, 1},
		{"Positive braking torque ramp", 224, 1},
		{"Negative braking torque ramp", 225, 1},
		{"Gear ratio", 226, 256},
		{"Wheel diameter", 227, 1},
		{"Assist cut out distance", 228, 256},
		{"Vehicle maximum speed (Race mode Throttle max speed)", 229, 256},
		{"Vehicle jog speed", 230, 256},
		{"Wheel speed sensor pulses per revolution", 231, 1},
		{"Pedalec minimum timeout", 232, 1},
		{"Pedalec maximum timeout", 233, 1},
		{"Pedal speed sensor pulses per revolution", 234, 1},
		{"Pedal sense delay", 235, 1},
		{"Vehicle maximum speed (Street mode Throttle max speed)", 236, 256},
		{"MFG_FlowCheck", 237, 1},
		{"MFG Barcode Type", 238, 1},
		{"Model Dictionary Number - Low", 239, 1},
		{"Model Dictionary Number - High", 240, 1},
		{"Assist speed 1", 241, 4096},
		{"Torque sensor voltage source", 242, 0},
		{"voltage threshold for shared digital input + motor temperature source", 243, 4096},
		{"Digital throttle sensor source", 244, 0},
		{"Assist gain 2", 245, 4096},
		{"Assist speed 2", 246, 4096},
		{"Throttle sensor source", 247, 0},
		{"Cutoff brake sensor source", 248, 0},
		{"Regen brake source", 249, 0},
		{"Assist Gain 3", 250, 4096},
		{"Assist Speed 3", 251, 4096},
		{"Vehicle jog speed2", 252, 256},
		{"Assist Gain Walk", 253, 4096},
		{"Speed limit ramp time", 254, 1},
		{"CAN sync loss timeout", 255, 1},
		{"software revision level", 256, 1000},
		{"controller status", 257, 0},
		{"faults", 258, 0},
		{"controller temperature", 259, 1},
		{"vehicle speed", 260, 256},
		{"motor temperature", 261, 1},
		{"motor current", 262, 32},
		{"motor rpm", 263, 1},
		{"motor speed", 264, 40.96},
		{"battery voltage", 265, 32},
		{"battery current", 266, 32},
		{"battery state of charge", 267, 1},
		{"battery power", 268, 1},
		{"last fault", 269, 0},
		{"throttle voltage", 270, 4096},
		{"brake 1 voltage", 271, 4096},
		{"brake 2 voltage", 272, 4096},
		{"raw controller temperature sensor voltage", 273, 4096},
		{"light sensor voltage", 274, 4096},
		{"analog bms soc voltage", 275, 1024},
		{"digital inputs", 276, 0},
		{"warnings", 277, 0},
		{"rotor angle", 278, 182.04444444444444444444444444444},
		{"battery temperature", 279, 1},
		{"battery power percent", 280, 1},
		{"dsp core temperature", 281, 1},
		{"phase A current", 282, 32},
		{"phase B current", 283, 32},
		{"phase C current", 284, 32},
		{"phase A voltage", 285, 32},
		{"phase B voltage", 286, 32},
		{"phase C voltage", 287, 32},
		{"boot loader software revision", 288, 1000},
		{"twelve volt supply voltage", 289, 1024},
		{"high state of charge foldback gain", 290, 32},
		{"raw battery voltage", 291, 4096},
		{"phase A voltage per unit", 292, 4096},
		{"phase B voltage per unit", 293, 4096},
		{"phase C voltage per unit", 294, 4096},
		{"digital outputs", 295, 0},
		{"ia_pu", 296, 4096},
		{"ic_pu", 297, 4096},
		{"overload accumulator", 298, 40.96},
		{"faults2", 299, 0},
		{"motor phase U high voltage POST", 300, 4096},
		{"motor phase U low voltage POST", 301, 4096},
		{"motor phase V high voltage POST", 302, 4096},
		{"motor phase V low voltage POST", 303, 4096},
		{"motor phase W high voltage POST", 304, 4096},
		{"motor phase W low voltage POST", 305, 4096},
		{"motor phase U open circuit voltage POST", 306, 4096},
		{"motor phase V open circuit voltage POST", 307, 4096},
		{"motor phase W open circuit voltage POST", 308, 4096},
		{"phase regen current power limit", 309, 4096},
		{"high voltage foldback gain", 310, 4096},
		{"wheel RPM (speed sensor based)", 311, 16},
		{"wheel RPM (motor based)", 312, 16},
		{"measured wheel RPM", 313, 16},
		{"local power limit command", 314, 4096},
		{"phase A current sensor offset", 315, 4096},
		{"phase C current sensor offset", 316, 4096},
		{"low voltage foldback gain", 317, 4096},
		{"phase motoring current power limit", 318, 4096},
		{"motor i^2t foldback gain", 319, 4096},
		{"motor temperature foldback gain", 320, 4096},
		{"inverter temperature foldback gain", 321, 4096},
		{"speed limiter output", 322, 4096},
		{"motoring phase current limit", 323, 4096},
		{"low state of charge foldback gain", 324, 4096},
		{"throttle setpoint", 325, 4096},
		{"brake setpoint", 326, 4096},
		{"controller flags", 327, 0},
		{"instantaneous pedal speed", 328, 64},
		{"assist speed limit", 329, 4096},
		{"sensorless state", 330, 0},
		{"average pedal speed", 331, 64},
		{"average pedal torque", 332, 64},
		{"regen phase current limit", 333, 4096},
		{"motor input power", 334, 1},
		{"requested torque command", 335, 4096},
		{"torque reference", 336, 4096},
		{"speed(ref/limit) command", 337, 4096},
		{"pedal speed gain", 338, 4096},
		{"assist level", 339, 4096},
		{"modbus1 CRC error count", 340, 1},
		{"modbus1 HW errors", 341, 1},
		{"modbus2 CRC error count", 342, 1},
		{"modbus2 HW errors", 343, 1},
		{"reserved L4 4", 344, 1},
		{"vd", 345, 4096},
		{"vq", 346, 4096},
		{"d feedback avg", 347, 4096},
		{"q feedback avg", 348, 4096},
		{"axle torque sensor offset voltage", 349, 4096},
		{"current ISR execution time", 350, 60},
		{"peak ISR execution time", 351, 60},
		{"peak 1ms loop time", 352, 15},
		{"average 1ms time", 353, 15},
		{"1ms time", 354, 15},
		{"execution time 4", 355, 60},
		{"autotune encoder offset", 356, 91.02222222},
		{"autotune offset error", 357, 91.02222222},
		{"execution time 7", 358, 60},
		{"warnings2", 359, 0},
		{"remote maximum battery current limit", 360, 8},
		{"remote maximum regen battery current limit", 361, 8},
		{"autotune # pole pairs", 362, 1},
		{"faults3", 363, 0},
		{"last faults3", 364, 0},
		{"custom code execution time", 365, 15},
		{"v integral", 366, 2048},
		{"v output", 367, 4096},
		{"v error", 368, 4096},
		{"v proportional", 369, 4096},
		{"d integral", 370, 256},
		{"q integral", 371, 256},
		{"d output", 372, 4096},
		{"q output", 373, 4096},
		{"d error", 374, 4096},
		{"q error", 375, 4096},
		{"d proportional", 376, 256},
		{"q proportional", 377, 256},
		{"q limit from d", 378, 4096},
		{"battery i^2t foldback gain", 379, 4096},
		{"d feedback", 380, 4096},
		{"q feedback", 381, 4096},
		{"d reference", 382, 4096},
		{"q reference", 383, 4096},
		{"maximum measurable current", 384, 1},
		{"maximum measurable voltage", 385, 1},
		{"positive battery limit", 386, 4096},
		{"negative battery limit", 387, 4096},
		{"stator current alpha", 388, 4096},
		{"stator current beta", 389, 4096},
		{"flux alpha", 390, 4096},
		{"flux beta", 391, 4096},
		{"flux frequency", 392, 1},
		{"flux magnitude", 393, 4096},
		{"flux angle", 394, 65536},
		{"open loop angle", 395, 91.022222},
		{"calculated battery current motoring limit", 396, 8},
		{"calculated battery current braking limit", 397, 8},
		{"motor temperature sensor voltage", 398, 4096},
		{"pu Lm", 399, 4096},
		{"debug1", 400, 1},
		{"debug2", 401, 1},
		{"reserved_402", 402, 1},
		{"pod switch value obsolete", 403, 0},
		{"encoder angle", 404, 65536},
		{"ib rms", 405, 32},
		{"do_not_use_3", 406, 1},
		{"wheel pulse counter", 407, 1},
		{"trip meter", 408, 100},
		{"pedalec_timeout_delay", 409, 1},
		{"pll angle", 410, 65536},
		{"pll error", 411, 65536},
		{"pll PI frequency", 412, 1},
		{"pll proportional", 413, 1},
		{"pll integral", 414, 256},
		{"rotor frequency", 415, 1},
		{"pll reference angle", 416, 65536},
		{"hall angle", 417, 65536},
		{"last fault2", 418, 0},
		{"hall frequency", 419, 1},
		{"q limit", 420, 256},
		{"d limit", 421, 256},
		{"id ref trim", 422, 4096},
		{"id ref fdfwd", 423, 4096},
		{"autotune Lm", 424, 1},
		{"autotune Rs", 425, 1},
		{"autotune Ls", 426, 1},
		{"pu Rs", 427, 4096},
		{"pu Ls", 428, 4096},
		{"rated electrical frequency", 429, 8},
		{"digital inputs 2", 430, 0},
		{"combined motor foldback", 431, 4096},
		{"flash parameter cycle counter", 432, 1},
		{"Ia_rms", 433, 32},
		{"Ic_rms", 434, 32},
		{"Iq_trim_q12", 435, 4096},
		{"modulation index", 436, 4096},
		{"pwm cmd a pwm", 437, 1},
		{"pwm cmd b pwm", 438, 1},
		{"pwm cmd c pwm", 439, 1},
		{"autotune hall sector[0]", 440, 4096},
		{"autotune hall sector[1]", 441, 4096},
		{"autotune hall sector[2]", 442, 4096},
		{"autotune hall sector[3]", 443, 4096},
		{"autotune hall sector[4]", 444, 4096},
		{"autotune hall sector[5]", 445, 4096},
		{"autotune hall sector[6]", 446, 4096},
		{"autotune hall sector[7]", 447, 4096},
		{"parameter CRC32 high word", 448, 0},
		{"parameter CRC32 low word", 449, 0},
		{"user access level", 450, 1},
		{"bootloader CRC32 high word", 451, 0},
		{"bootloader CRC32 low word", 452, 0},
		{"application CRC32 high word", 453, 0},
		{"application CRC32 low word", 454, 0},
		{"silicon revision", 455, 1},
		{"motoring limit pre-foldback", 456, 40.96},
		{"regen limit pre-foldback", 457, 40.96},
		{"peak background period", 458, 15},
		{"avg background period", 459, 15},
		{"autotune hall offset angle", 460, 91.02222222},
		{"depricated autotune Kv always 1", 461, 4096},
		{"autotune rated rpm", 462, 1},
		{"axle torque sensor assist", 463, 4096},
		{"rolling start speed assist mode", 464, 256},
		{"otp serial number0", 465, 0},
		{"otp serial number1", 466, 0},
		{"otp serial number2", 467, 0},
		{"otp serial number3", 468, 0},
		{"otp serial number4", 469, 0},
		{"otp serial number5", 470, 0},
		{"otp serial number6", 471, 0},
		{"otp serial number7", 472, 0},
		{"speed command", 473, 40.96},
		{"Maximum motoring current", 474, 40.96},
		{"Maximum braking current", 475, 40.96},
		{"State command", 476, 0},
		{"Applied Torque command", 477, 40.96},
		{"Running Light PWM (Daylight)", 478, 2.56},
		{"Brake Light PWM (Daylight)", 479, 2.56},
		{"Test mode", 480, 0},
		{"Motor discover mode", 481, 0},
		{"Open loop modulation", 482, 4096},
		{"Open loop current", 483, 1},
		{"Open loop frequency", 484, 16},
		{"Open loop angle", 485, 91.022222},
		{"debug_cmd1", 486, 1},
		{"debug_cmd2", 487, 1},
		{"controller flags2", 488, 0},
		{"do_not_use_4", 489, 1},
		{"Remote speed command", 490, 40.96},
		{"Remote maximum motoring current", 491, 40.96},
		{"Remote maximum braking current", 492, 40.96},
		{"Remote state command", 493, 0},
		{"Remote torque command", 494, 40.96},
		{"Remote Throttle Voltage", 495, 4096},
		{"Remote Digital Commands", 496, 0},
		{"Remote Analog brake voltage", 497, 4096},
		{"Parameter read access code 1", 498, 0},
		{"Bidirectional torque command", 499, 10000},
		{"Display speed limit command", 500, 4096},
		{"Display assist level command", 501, 4096},
		{"Display walk command", 502, 1},
		{"Remote battery SOC", 503, 1},
		{"Remote battery temperature", 504, 1},
		{"Remote light sensor voltage", 505, 4096},
		{"Remote assist mode", 506, 1},
		{"Arm datalogger", 507, 1},
		{"Fault clear", 508, 1},
		{"Parameter access code 1", 509, 0},
		{"Load firmware to flash", 510, 0},
		{"Write parameters to flash", 511, 0}
	};
};

#endif


#endif /* UTILITIES_SRC_PHASERUNNERREGISTERMAP_H_ */
